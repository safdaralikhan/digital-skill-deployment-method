................CSS GRID EVERYTHING.........
https://learncssgrid.com/


HOW TO BUy SERVER FROM DIGITALOCEAN

https://www.codewithharry.com/blogpost/setup-ubuntu-20-04-server/
all steps are written in this link
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
WHAT IS ROOT USER ?
The root user is a user having the highest privileges on the server. This means that a root user can do anything and everything on the server. This is why it is strongly discouraged to use a root account as it might accidentally delete files/uninstall programs/install programs etc. Hence we will create a user who will have restricted permissions on the server for day-to-day use.

CREATING A NON ROOT USER 
Execute the following command:
adduser Username.
usermod -aG sudo harry.

FIREWALL SETUP
Our server is public, and we want to protect it from external unwanted connections. We want only selected services exposed to the public on our server.
We will set up the UFW firewall on our Ubuntu 20.04 server and allow OpenSSH, which allows us to connect to our server.
ufw allow OpenSSH.
ufw enable
You can type the following command to elevate to the root access as and when required.
sudo su

login through ssh(Secure Socket Shell):

* ssh root@143.198.70.29

For Update:
* apt-get update


Nginx Installation:
* apt install nginx


Password change:
* passwd


Docker Installation:
1.sudo apt-get update
2.sudo apt-get install \
    ca-certificates \
    curl \
    gnupg \
    lsb-release

3. sudo mkdir -p /etc/apt/keyrings
4.curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

5.echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
6. sudo apt-get update
7.sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
8.sudo apt install docker-compose


classs 2
what is docker ?
Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications

what is docker image ?
A Docker image is a read-only template that contains a set of instructions for creating a container that can run on the Docker platform.

What is NGINX is used for?
NGINX is open source software for web serving, reverse proxying, caching, load balancing, media streaming, and more. It started out as a web server designed for maximum performance and stability.
nginx ek image ha image mtlb wo sari information jo container ko banany k liye chaiye.

What is Nginx reverse proxy?
Nginx reverse proxy acts as an intermediate server that intercepts client requests and forwards them to the appropriate upstream backend server and subsequently forwarded a response from the server back to the client. The reverse proxy provides various benefits as an abstract layer above upstream servers.

what is load balancing ?
A load balancer acts as the “traffic cop” sitting in front of your servers and routing client requests across all servers capable of fulfilling those requests in a manner that maximizes speed and capacity utilization and ensures that no one server is overworked, which could degrade performance.



docker ps (jo container chal raha hota ha wo ata hai)
docker images (jo images chal rahy hoty hai wo ata ha)
service nginx status (ngix working or not)

DEPLOYING STATIC WEBSITE
1) cd /etc/nginx/sites-enabled (is folder mai reverse proxy banaty ha)
2) vim xyz.txt (make file)
3) press i to start typing in file.
4) save the reverse proxy code.
5) to save file press (esc shift colun and wq).
6) to check nginx file is ok (nginx -t)
7) after save file restart nginx (service nginx restart)
8) and then write port port to check its live or not.
9) to delete file (rm -rf and file name)
to fake folder (mkdir folder name)
to search where are you (pwd)
downlaod filezilla for transfer file from your computer to server.
(https://filezilla-project.org/download.php?show_all=1) LINK
to check nginx file is ok (nginx -t)
after save file restart nginx (service nginx restart)

SSL DOMAIN METHOD
sudo apt install certbot python3-certbot-nginx (install this)
certbot (run this command)



// everything install with apt-get install

apt-get installl vim
https://github.com/shakeebanwar/aws-learnig/blob/master/awsCredential.txt



###################################How to transferfile from one system to another using scp#############################
1.sudo apt-get install scp

Transfer local to remote server
yai command system k terminal mai chalana ha.

2.scp filename root@api.libraa.ml:/hnh   //for file (wo file name jo system mai hai us k bd server ka ip or us k andr jjis folder mai dalna ha)
3.scp -r foldername root@api.libraa.ml:/hnh   //for folder

Transfer remote to local
scp -r root@api.libraa.ml:/remotelocation /localsystemlocation




port maping
docker run -p 80:80 nginx
docker run -d -p 82:80 nginx (for background )
docker ps (to check what is on working)
docker stop (to stop container)
docker ps -a (check all containers)
ufw allow 5000
docker system prune (delete all container)
docker rm -f containerid(force fully kill container)
docker exec -it 1f bash (go to specif container)
service nginx status (status check)

docker cp <source> <destination> (copy file from container to system)
docker cp contaierid:filename destination file name

 ...............HTML PROJECT DEPLOY ON DOCKER............. 
docker run -d -p 8000:80 -v /home/shakeeb/Desktop/Others/express-node-js/sequelize/nginx:/usr/share/nginx/html --name safdar nginx

...........EXPLANATIN OF BUILD DEPLOYING WITH DOCKER...............
1 transfer file from system to server.
scp filename root@api.libraa.ml:/hnh   //for file (wo file name jo system mai hai us k bd server ka ip or us k andr jjis folder mai dalna ha)
2 then create docekr image of your build.
docker run -d -p 8000:80 -v /home/shakeeb/Desktop/Others/express-node-js/sequelize/nginx:/usr/share/nginx/html --name safdar nginx
docker run -d -p port addres path of build where it is located on server: same as copy --name safdar nginx.







